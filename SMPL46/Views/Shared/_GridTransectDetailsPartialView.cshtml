@using SMPL.ViewModels
@using SMPL.Models
@model SMPL.ViewModels.ManageTransectsViewModel

@{
    var grid = new WebGrid(ViewBag.TransectDetails as List<ManageTransectsModel>, canPage: true, rowsPerPage: 25, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "grid");
    grid.Pager(WebGridPagerModes.NextPrevious);
}

<div id="grid">
    @grid.GetHtml(
        tableStyle: "webgrid-table", mode: WebGridPagerModes.All,

        firstText: "<< First",
        previousText: "< Prev",
        nextText: "Next >",
        lastText: "Last >>",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        columns: grid.Columns(

            grid.Column("Cleaning_ID", "ID", canSort: true, style: "cleaningid"),
            grid.Column("Street_Name", "Street Name", canSort: true, style: "streetname"),
            grid.Column("Ward_Name", "Ward Name", canSort: true, style: "Ward_Name"),
            grid.Column("District", "District", canSort: true, style: "District"),
            grid.Column("Freq_Code", "Freq Code", canSort: true, style: "Freq_Code"),
            grid.Column("Cleaning_Day", "Clean Day", canSort: true, style: "Cleaning_Day"),
            grid.Column("Cleaning_Week", "Clean Week", canSort: true, style: "Cleaning_Week"),
            grid.Column("Deep_Week", "Deep Week", canSort: true, style: "Deep_Week"),
            grid.Column("Deep_Day", "Deep Day", canSort: true, style: "Deep_Day"),
            grid.Column("Category", "Category", canSort: true, style: "Category"),
            grid.Column("Land_Use_Desc", "Land Use", canSort: true, style: "Land_Use_Desc"),
            grid.Column("Zone_Nr", "Zone Nr", canSort: true, style: "Zone_Nr"),
            grid.Column("Length", "Length", canSort: true, style: "Length"),
            grid.Column("USRN", "USRN", canSort: false, style: "USRN"),
            grid.Column(header: "Edit", format: (item) =>
                    {
                        var link = Html.ActionLink("Edit", "Edit", new { id = item.Cleaning_ID });
                        return link;
                    }, canSort: false, style: "Edit"),
            grid.Column(header: "Delete", format: (item) =>
                    {
                        var link = Html.ActionLink("Delete", "Delete", new { id = item.Cleaning_ID });
                        return link;
                    }, canSort: false, style: "Delete")

        ))
</div>
  
